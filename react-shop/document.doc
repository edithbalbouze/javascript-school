VIDEO 14 TIPOS DE COMPONENTES EN REACT: STATEFUL vs. STATELESS

Este es un ejemplo para useState, podemos darle un valor inicial, el cual puede ser cambiado por un evento que se puede asignar a este mismo componente, o a otros componentes y hasta pasarlo por medio de un hijo para que éste cambie el inicial.

Para poder usar componentes stateful es necesario llamar useState desde React, la forma de importarlo y usarlo es la siguiente:

Estructura de un componente StateFul

import React, {useState} from "react";

const Button = () => {
    const [name, setName] = useState('Hola Mundo');
    return (
        <div>
            <h1>{name}</h1>
        </div>
    );
}



Los componentes stateless servirán para pasar un estilo visual o props, pero no tendrá otra función más que esa.

Este sería un componente sin estado, stateless o Componente de forma presentacional de la estructura.


import React from "react";

const Button = () => (
    <div>
        <h1>Hola Mundo</h1>
    </div>
);


Si no tenemos el componente JSX directamente 

pero si el componente que vamos a retornar componente pudemos usar este 

import React from "react";

const Button = ({ text }) => <ButtonRed text={text} />;


COMPONENTES CLASES
import React from "react";

class App extends React.Component {
    render() {
        return(
            <div>
                <h1>Hello, world!</h1>
            </div>
        );
    }
} 

o eliminar React y agregar component

import React, {Component} from "react";

class App extends Component {
    render(){
        return (
            <div>
                <h1>Hello, world!</h1>
            </div>
        );
    }
}

Son la manera anterior a los React Hooks en la cual usábamos los componentes de React

HOC (high order components)
Reciben un componente, y los adaptan de otra manera para usarlos con “modificaciones”. Es como el patrón decorator. Suelen regresar un componente que modifica la lógica del componente anterior

import React , { Component } from 'react';

function ComponentWrapper(WrapperComponent) {
	class Wrapper extends Component {
        render () {
            return <WrapperComponent {...this.props} />;
        }
    }

    return Wrapper;
}



¿Para qué sirve React Context?
    Para compartir un estado general con todos los componentes de la aplicacion

 Creaste un estado name utilizando React.useState. Necesitas que tu párrafo muestre ese nombre. Cada vez que ese estado cambie, tu párrafo debe cambiar también y mostrar el nuevo nombre. ¿Cómo lo harías?
    {name}


¿Cómo ejecutamos un console.log cuando los usuarios presionen un botón?
    <button onClick={() => console.log('Eventos en React')}>Enviar</button>

¿Cuál de las siguientes es una regla para crear Custom Hooks?
    Que su nombre empiece con use (ej: useToggle, useCarrito)